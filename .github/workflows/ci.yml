name: Continuous Integration


# Trigger this workflow on push or pull_request events
on:
  push:
    branches:
      - main  # Runs when pushing to the main branch
    paths:
      - 'dbt/models/**/*.sql' # Only run on changes to SQL files in the dbt/models directory
      - 'dbt/models/**/*.py'
      - 'cam_on_dagster_dbt/assets/*.py' # Only run on changes to assets in the cam_on_dagster_dbt directory
  pull_request:
    branches:
      - main
    paths:
      - 'dbt/models/**/*.sql'
      - 'dbt/models/**/*.py'
      - 'cam_on_dagster_dbt/assets/*.py'


jobs:
  test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment


    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.12'  # or whatever version you use


      # Step 3 Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # Step 4
      - name: Set up DBT profile
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<EOF
          camondagster:
            outputs:
              dev:
                type: duckdb
                path: ${{ secrets.MOTHERDUCK }}
                schema: public
                threads: 2
                extensions:
                  - httpfs
                  - parquet
                  - motherduck
            target: dev
          EOF
     
      # Restore previous manifest cache
      - name: Restore DBT manifest cache
        uses: actions/cache@v3
        with:
          path: dbt/previous-manifest
          key: dbt-state-${{ github.ref_name }}

      - name: Install DBT packages
        run: cd dbt && dbt deps

      - name: Run DBT build (with fallback)
        run: |
          cd dbt
          if [ -f previous-manifest/manifest.json ]; then
            echo "Running incremental dbt build with state:modified+"
            dbt build --select state:modified+ --state=previous-manifest
          else
            echo "No previous manifest. Running full dbt build"
            dbt build
          fi

      - name: Compile DBT and prepare new state
        run: |
          cd dbt
          dbt compile --target-path=previous-manifest
          echo "New manifest generated at dbt/previous-manifest"
        
      - name: Save updated manifest to cache
        uses: actions/cache@v3
        with:
          path: dbt/previous-manifest
          key: dbt-state-${{ github.ref_name }}
